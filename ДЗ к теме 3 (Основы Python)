""" 
Задание
Вам нужно помочь секретарю автоматизировать работу. Для этого нужно написать программу, которая будет на основе хранимых данных исполнять пользовательские команды.

Исходные данные имеют следующую структуру:
  1) перечень всех документов:
    documents = [ 
      {'type': 'passport', 'number': '2207 876234', 'name': 'Василий Гупкин'}, 
      {'type': 'invoice', 'number': '11-2', 'name': 'Геннадий Покемонов'}, 
      {'type': 'insurance', 'number': '10006', 'name': 'Аристарх Павлов'} 
    ]
  2) перечень полок, на которых хранятся документы (если документ есть в documents, он обязательно должен быть и в directories):
    directories = { 
      '1': ['2207 876234', '11-2'], 
      '2': ['10006'], 
      '3': []
    }

Общие требования к программе:
  - код должен быть грамотно декомпозирован: каждая функция отвечает за свою конкретную задачу, дублирующиеся функции переиспользуются, а их код не повторяется;
  - в коде отсутствуют глобальные переменные, за исключением documents и directories;
  - пользовательский ввод обрабатывается в цикле while до тех пор, пока пользователь явно не заврешит программу вводом команды «q»
-------------------------------------------------------------------------------------------------------------------------------------------------------------------

Задание 1
Пользователь по команде «p» может узнать владельца документа по его номеру.

Пример работы программы:
  Введите команду:
  p
  Введите номер документа:
  10006
  Результат:
  Владелец документа: Аристарх Павлов
-------------------------------------------------------------------------------------------------------------------------------------------------------------------

Задание 2 (не обязательное)
Секретарь по команде «s» может по номеру документа узнать, на какой полке документ хранится.

Пример работы программы:
  Введите команду:
  s
  Введите номер документа:
  10006
  Результат:
  Документ хранится на полке: 2
"""

# Перечень всех документов
documents = [ 
    {'type': 'passport', 'number': '2207 876234', 'name': 'Василий Гупкин'}, 
    {'type': 'invoice', 'number': '11-2', 'name': 'Геннадий Покемонов'}, 
    {'type': 'insurance', 'number': '10006', 'name': 'Аристарх Павлов'}
]


# Перечень полок, на которых хранятся документы
directories = { 
    '1': ['2207 876234', '11-2'], 
    '2': ['10006'], 
    '3': [] 
}


# Функция для задания 1
def doc_owner(doc_number):
    """Поиск владельца документа по его номеру."""
    for entry in documents:
        if entry['number'] == doc_number:  # Проверка совпадения номера документа введенного пользователем
            return entry['name']
    return None


# Функция для задания 2
def shelf_finder(doc_number):
    """Поиск полки хранения документа по его номеру."""
    for shelf_number, docs_on_shelf in directories.items():
        if doc_number in docs_on_shelf:  # Проверка наличия номера документа в списке документов полки
            return shelf_number
    return None


# Главная функция
def main():
    while True:
        command = input("Введите команду: ")
        if command == 'q':  # Завершение программы
            break
            
        # Обработка команды «p» - вызов функции doc_owner    
        elif command == 'p':  
            doc_number = input("Введите номер документа: ")
            owner = doc_owner(doc_number)    
            if owner:
                print(f"Владелец документа: {owner}")
            else:
                print(f"Документ {doc_number} не найден")   

        # Обработка команды «s» - вызов функции shelf_finder        
        elif command == 's':  
            doc_number = input("Введите номер документа: ")
            shelf = shelf_finder(doc_number)
            if shelf:
                print(f"Документ хранится на полке: {shelf}")
            else:
                print(f"Документ {doc_number} не найден")


# Запуск программы
main()
